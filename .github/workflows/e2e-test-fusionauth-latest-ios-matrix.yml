# This workflow performs a full End 2 End test of the App
# It runs the test on the last 5 iOS releases.

name: E2E Test with latest FusionAuth

on:
  # Triggers the workflow on pull request events but only for default and protected branches
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  fusionauth-docker-image-version: "1.53.2"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "e2e-test"
  e2e-test:
    name: End 2 End Test

    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    # The type of runner that the job will run on
    # https://xcodereleases.com/
    # https://developer.apple.com/support/xcode/
    # https://developer.apple.com/documentation/xcode-release-notes
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        destination: [ "platform=iOS Simulator,OS=18.1,name=iPhone 15" ]
        xcode: [ "15.4" ]
        simulator-platform: [ "iOS" ]
        simulator-version: [ "18.1" ]
        swift: ["5.10.1"]
        os: [ "macos-14" ]
        include:
          - destination: "platform=iOS Simulator,OS=17.5,name=iPhone 15"
            xcode: "15.4"
            simulator-platform: "iOS"
            simulator-version: "17.5"
            swift: "5.10.1"
            os: "macos-14"
          - destination: "platform=iOS Simulator,OS=16.4,name=iPhone 14"
            xcode: "14.3.1"
            simulator-platform: "iOS"
            simulator-version: "16.4"
            swift: "5.8.1"
            os: "macos-13"
          - destination: "platform=iOS Simulator,OS=15.5,name=iPhone 14"
            xcode: "14.3.1"
            simulator-platform: "iOS"
            simulator-version: "15.5"
            swift: "5.8.1"
            os: "macos-13"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Initialize the latest version of Xcode.
      - name: Initialize latest xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: ${{ matrix.xcode }}

      # Remove any other Xcode version.
      - name: Remove old xcode versions
        run: |
          echo "Searching for Xcode versions:"
          find /Applications -name "Xcode_*" -maxdepth 1 -mindepth 1
          echo "Removing old Xcode versions..."
          find /Applications -name "Xcode_*" -maxdepth 1 -mindepth 1 | grep -v ${{ matrix.xcode }} | xargs rm -rf
          echo "Available Xcode versions after removal:"
          find /Applications -name "Xcode_*" -maxdepth 1 -mindepth 1

      # Get the Xcode version.
      - name: Get Xcode version
        run: xcodebuild -version

      # Download simulator platform.
      - name: Download simulator platform
        run: |
          xcodebuild -runFirstLaunch
          xcodebuild -downloadPlatform ${{ matrix.simulator-platform }} -exportPath ./SimulatorRuntimes/

      # Install simulator platform.
      - name: Install simulator runtime
        run: xcodebuild -importPlatform ./SimulatorRuntimes/*${{ matrix.simulator-version }}*.dmg

      # Initialize Swift in the matrix specified version.
      - name: Initialize Swift
        uses: swift-actions/setup-swift@v2.1.0
        with:
          swift-version: ${{ matrix.swift }}

      # Get the Swift version.
      - name: Get Swift version
        run: swift --version

      # Checkout the repository.
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      # Create and start FusionAuth containers used by E2E test and sleeps for 30 seconds.
      # Despite its waiting until the container started with the status healthy,
      # it will run the kickstart after that, which takes a moment.
      #- name: Start FusionAuth
      #  uses: fusionauth/fusionauth-github-action@v1
      #  with:
      #    FUSIONAUTH_VERSION: ${{ env.fusionauth-docker-image-version }}
      #    FUSIONAUTH_APP_KICKSTART_DIRECTORY_PATH: fusionauth/${{ env.fusionauth-docker-image-version }}/kickstart

      # Perform the build manually.
      - name: Manual Build
        run: set -o pipefail && xcodebuild -workspace FusionAuthSDK.xcworkspace/ -scheme fusionauth-quickstart-swift-ios-native -destination "${{matrix.destination}}" -skipPackagePluginValidation
